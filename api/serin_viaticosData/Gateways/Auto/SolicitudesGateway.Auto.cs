
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is SolicitudesGateway.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;
using serin_viaticosRules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data;
using System.Data.Common;
using System.Reflection;
using System.Web;




namespace serin_viaticosRules.Gateways
{

    public partial class SolicitudesGateway : BaseGateway<SolicitudesObject, SolicitudesObjectList>, IGenericGateway
    {

        #region "Singleton"

        static SolicitudesGateway _instance;

        private SolicitudesGateway()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        
        
        public static SolicitudesGateway Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new SolicitudesGateway();
                else {
                    SolicitudesGateway inst = HttpContext.Current.Items["serin_viaticosRules.SolicitudesGatewaySingleton"] as SolicitudesGateway;
                    if (inst == null) {
                        inst = new SolicitudesGateway();
                        HttpContext.Current.Items.Add("serin_viaticosRules.SolicitudesGatewaySingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }

        #endregion

        /// <summary>
        /// Return the mapped table name
        /// </summary>
        protected override string TableName
        {
            get { return "Solicitudes"; }
        }

        protected override string RuleName
        {
            get {return typeof(SolicitudesGateway).FullName;}
        }


        

        /// <summary>
        /// Assign properties values based on DataReader
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, SolicitudesObject entity)
        {
            
            IMappeableSolicitudesObject Solicitudes = (IMappeableSolicitudesObject)entity;
            Solicitudes.HydrateFields(
            reader.GetInt32(0),
reader.GetDateTime(1),
reader.GetInt32(2),
reader.GetInt32(3),
(reader.IsDBNull(4)) ? "" : reader.GetString(4),
(reader.IsDBNull(5)) ? "" : reader.GetString(5));
            ((IObject)entity).State = ObjectState.Restored;
        }

        /// <summary>
        /// Get field values to call insertion stored procedure
        /// </summary>
        protected override object[] GetFieldsForInsert(SolicitudesObject entity)
        {

            IMappeableSolicitudesObject Solicitudes = (IMappeableSolicitudesObject)entity;
            return Solicitudes.GetFieldsForInsert();
        }

        /// <summary>
        /// Get field values to call update stored procedure
        /// </summary>
        protected override object[] GetFieldsForUpdate(SolicitudesObject entity)
        {

            IMappeableSolicitudesObject Solicitudes = (IMappeableSolicitudesObject)entity;
            return Solicitudes.GetFieldsForUpdate();
        }

        /// <summary>
        /// Get field values to call deletion stored procedure
        /// </summary>
        protected override object[] GetFieldsForDelete(SolicitudesObject entity)
        {

            IMappeableSolicitudesObject Solicitudes = (IMappeableSolicitudesObject)entity;
            return Solicitudes.GetFieldsForDelete();
        }

        /// <summary>
        /// Raised after insert and update. Update properties from Output parameters
        /// </summary>
        protected override void UpdateObjectFromOutputParams(SolicitudesObject row, object[] parameters)
        {
            ((IMappeableSolicitudesObject) row).UpdateObjectFromOutputParams(parameters);
            ((IObject)row).State = ObjectState.Restored;
        }

        /// <summary>
        /// StoredProceduresPrefix, for example: coop_
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "coop_";
        }


        /// <summary>
        /// Get a SolicitudesObject by execute a SQL Query Text
        /// </summary>
        public SolicitudesObject GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a SolicitudesObjectList by execute a SQL Query Text
        /// </summary>
        public SolicitudesObjectList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// Get a SolicitudesObject by calling a Stored Procedure
        /// </summary>
        public SolicitudesObject GetOne(System.Int32 IdSolicitud)
        {
            return base.GetOne(new SolicitudesObject(IdSolicitud));
        }


        // GetBy Objects and Params
            


        

        /// <summary>
        /// Get a SolicitudesObjectList by calling a Stored Procedure
        /// </summary>
        public SolicitudesObjectList GetBySolicitudesEstados(DbTransaction transaction,System.Int32 IdSolicituEstado)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Solicitudes_GetBySolicitudesEstados", IdSolicituEstado);
        }

        /// <summary>
        /// Get a SolicitudesObjectList by calling a Stored Procedure
        /// </summary>
        public SolicitudesObjectList GetBySolicitudesEstados(DbTransaction transaction, IUniqueIdentifiable SolicitudesEstados)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Solicitudes_GetBySolicitudesEstados", SolicitudesEstados.Identifier());
        }

    

        

        /// <summary>
        /// Get a SolicitudesObjectList by calling a Stored Procedure
        /// </summary>
        public SolicitudesObjectList GetBySolicitudesEstados(System.Int32 IdSolicituEstado)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Solicitudes_GetBySolicitudesEstados", IdSolicituEstado);
        }

        /// <summary>
        /// Get a SolicitudesObjectList by calling a Stored Procedure
        /// </summary>
        public SolicitudesObjectList GetBySolicitudesEstados(IUniqueIdentifiable SolicitudesEstados)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Solicitudes_GetBySolicitudesEstados", SolicitudesEstados.Identifier());
        }

    

        /// <summary>
        /// Delete Solicitudes
        /// </summary>
        public void Delete(System.Int32 IdSolicitud)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Solicitudes_Delete", IdSolicitud);
        }

        /// <summary>
        /// Delete Solicitudes
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 IdSolicitud)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Solicitudes_Delete", IdSolicitud);
        }

            

        

        /// <summary>
        /// Delete Solicitudes by SolicitudesEstados
        /// </summary>
        public void DeleteBySolicitudesEstados(System.Int32 IdSolicituEstado)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Solicitudes_DeleteBySolicitudesEstados", IdSolicituEstado);
        }

        /// <summary>
        /// Delete Solicitudes by SolicitudesEstados
        /// </summary>
        public void DeleteBySolicitudesEstados(DbTransaction transaction, System.Int32 IdSolicituEstado)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Solicitudes_DeleteBySolicitudesEstados", IdSolicituEstado);
        }

        /// <summary>
        /// Delete Solicitudes by SolicitudesEstados
        /// </summary>
        public void DeleteBySolicitudesEstados(IUniqueIdentifiable SolicitudesEstados)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Solicitudes_DeleteBySolicitudesEstados", SolicitudesEstados.Identifier());
        }

        /// <summary>
        /// Delete Solicitudes by SolicitudesEstados
        /// </summary>
        public void DeleteBySolicitudesEstados(DbTransaction transaction, IUniqueIdentifiable SolicitudesEstados)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Solicitudes_DeleteBySolicitudesEstados", SolicitudesEstados.Identifier());
        }


    


        //Database Queries 
        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }

}








