
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is ReservasHotelGateway.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;
using serin_viaticosRules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data;
using System.Data.Common;
using System.Reflection;
using System.Web;




namespace serin_viaticosRules.Gateways
{

    public partial class ReservasHotelGateway : BaseGateway<ReservasHotelObject, ReservasHotelObjectList>, IGenericGateway
    {

        #region "Singleton"

        static ReservasHotelGateway _instance;

        private ReservasHotelGateway()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        
        
        public static ReservasHotelGateway Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new ReservasHotelGateway();
                else {
                    ReservasHotelGateway inst = HttpContext.Current.Items["serin_viaticosRules.ReservasHotelGatewaySingleton"] as ReservasHotelGateway;
                    if (inst == null) {
                        inst = new ReservasHotelGateway();
                        HttpContext.Current.Items.Add("serin_viaticosRules.ReservasHotelGatewaySingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }

        #endregion

        /// <summary>
        /// Return the mapped table name
        /// </summary>
        protected override string TableName
        {
            get { return "ReservasHotel"; }
        }

        protected override string RuleName
        {
            get {return typeof(ReservasHotelGateway).FullName;}
        }


        

        /// <summary>
        /// Assign properties values based on DataReader
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, ReservasHotelObject entity)
        {
            
            IMappeableReservasHotelObject ReservasHotel = (IMappeableReservasHotelObject)entity;
            ReservasHotel.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
reader.GetInt32(2),
reader.GetInt32(3),
reader.GetInt32(4),
(reader.IsDBNull(5)) ? "" : reader.GetString(5),
(reader.IsDBNull(6)) ? new System.Nullable<System.Decimal>() : reader.GetDecimal(6),
reader.GetDateTime(7),
reader.GetDateTime(8));
            ((IObject)entity).State = ObjectState.Restored;
        }

        /// <summary>
        /// Get field values to call insertion stored procedure
        /// </summary>
        protected override object[] GetFieldsForInsert(ReservasHotelObject entity)
        {

            IMappeableReservasHotelObject ReservasHotel = (IMappeableReservasHotelObject)entity;
            return ReservasHotel.GetFieldsForInsert();
        }

        /// <summary>
        /// Get field values to call update stored procedure
        /// </summary>
        protected override object[] GetFieldsForUpdate(ReservasHotelObject entity)
        {

            IMappeableReservasHotelObject ReservasHotel = (IMappeableReservasHotelObject)entity;
            return ReservasHotel.GetFieldsForUpdate();
        }

        /// <summary>
        /// Get field values to call deletion stored procedure
        /// </summary>
        protected override object[] GetFieldsForDelete(ReservasHotelObject entity)
        {

            IMappeableReservasHotelObject ReservasHotel = (IMappeableReservasHotelObject)entity;
            return ReservasHotel.GetFieldsForDelete();
        }

        /// <summary>
        /// Raised after insert and update. Update properties from Output parameters
        /// </summary>
        protected override void UpdateObjectFromOutputParams(ReservasHotelObject row, object[] parameters)
        {
            ((IMappeableReservasHotelObject) row).UpdateObjectFromOutputParams(parameters);
            ((IObject)row).State = ObjectState.Restored;
        }

        /// <summary>
        /// StoredProceduresPrefix, for example: coop_
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "coop_";
        }


        /// <summary>
        /// Get a ReservasHotelObject by execute a SQL Query Text
        /// </summary>
        public ReservasHotelObject GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a ReservasHotelObjectList by execute a SQL Query Text
        /// </summary>
        public ReservasHotelObjectList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// Get a ReservasHotelObject by calling a Stored Procedure
        /// </summary>
        public ReservasHotelObject GetOne(System.Int32 IdReservaHotel)
        {
            return base.GetOne(new ReservasHotelObject(IdReservaHotel));
        }


        // GetBy Objects and Params
            


        

        /// <summary>
        /// Get a ReservasHotelObjectList by calling a Stored Procedure
        /// </summary>
        public ReservasHotelObjectList GetByHoteles(DbTransaction transaction,System.Int32 IdHotel)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_GetByHoteles", IdHotel);
        }

        /// <summary>
        /// Get a ReservasHotelObjectList by calling a Stored Procedure
        /// </summary>
        public ReservasHotelObjectList GetByHoteles(DbTransaction transaction, IUniqueIdentifiable Hoteles)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_GetByHoteles", Hoteles.Identifier());
        }

    

        /// <summary>
        /// Get a ReservasHotelObjectList by calling a Stored Procedure
        /// </summary>
        public ReservasHotelObjectList GetByUbicaciones(DbTransaction transaction,System.Int32 IdDestino)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_GetByUbicaciones", IdDestino);
        }

        /// <summary>
        /// Get a ReservasHotelObjectList by calling a Stored Procedure
        /// </summary>
        public ReservasHotelObjectList GetByUbicaciones(DbTransaction transaction, IUniqueIdentifiable Ubicaciones)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_GetByUbicaciones", Ubicaciones.Identifier());
        }

    

        

        /// <summary>
        /// Get a ReservasHotelObjectList by calling a Stored Procedure
        /// </summary>
        public ReservasHotelObjectList GetByHoteles(System.Int32 IdHotel)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_GetByHoteles", IdHotel);
        }

        /// <summary>
        /// Get a ReservasHotelObjectList by calling a Stored Procedure
        /// </summary>
        public ReservasHotelObjectList GetByHoteles(IUniqueIdentifiable Hoteles)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_GetByHoteles", Hoteles.Identifier());
        }

    

        /// <summary>
        /// Get a ReservasHotelObjectList by calling a Stored Procedure
        /// </summary>
        public ReservasHotelObjectList GetByUbicaciones(System.Int32 IdDestino)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_GetByUbicaciones", IdDestino);
        }

        /// <summary>
        /// Get a ReservasHotelObjectList by calling a Stored Procedure
        /// </summary>
        public ReservasHotelObjectList GetByUbicaciones(IUniqueIdentifiable Ubicaciones)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_GetByUbicaciones", Ubicaciones.Identifier());
        }

    

        /// <summary>
        /// Delete ReservasHotel
        /// </summary>
        public void Delete(System.Int32 IdReservaHotel)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_Delete", IdReservaHotel);
        }

        /// <summary>
        /// Delete ReservasHotel
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 IdReservaHotel)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_Delete", IdReservaHotel);
        }

            

        

        /// <summary>
        /// Delete ReservasHotel by Hoteles
        /// </summary>
        public void DeleteByHoteles(System.Int32 IdHotel)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_DeleteByHoteles", IdHotel);
        }

        /// <summary>
        /// Delete ReservasHotel by Hoteles
        /// </summary>
        public void DeleteByHoteles(DbTransaction transaction, System.Int32 IdHotel)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_DeleteByHoteles", IdHotel);
        }

        /// <summary>
        /// Delete ReservasHotel by Hoteles
        /// </summary>
        public void DeleteByHoteles(IUniqueIdentifiable Hoteles)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_DeleteByHoteles", Hoteles.Identifier());
        }

        /// <summary>
        /// Delete ReservasHotel by Hoteles
        /// </summary>
        public void DeleteByHoteles(DbTransaction transaction, IUniqueIdentifiable Hoteles)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_DeleteByHoteles", Hoteles.Identifier());
        }


    

        /// <summary>
        /// Delete ReservasHotel by Ubicaciones
        /// </summary>
        public void DeleteByUbicaciones(System.Int32 IdDestino)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_DeleteByUbicaciones", IdDestino);
        }

        /// <summary>
        /// Delete ReservasHotel by Ubicaciones
        /// </summary>
        public void DeleteByUbicaciones(DbTransaction transaction, System.Int32 IdDestino)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_DeleteByUbicaciones", IdDestino);
        }

        /// <summary>
        /// Delete ReservasHotel by Ubicaciones
        /// </summary>
        public void DeleteByUbicaciones(IUniqueIdentifiable Ubicaciones)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_DeleteByUbicaciones", Ubicaciones.Identifier());
        }

        /// <summary>
        /// Delete ReservasHotel by Ubicaciones
        /// </summary>
        public void DeleteByUbicaciones(DbTransaction transaction, IUniqueIdentifiable Ubicaciones)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_DeleteByUbicaciones", Ubicaciones.Identifier());
        }


    


        //Database Queries 
        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }

}








