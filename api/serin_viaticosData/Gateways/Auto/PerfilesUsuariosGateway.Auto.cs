
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is PerfilesUsuariosGateway.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;
using serin_viaticosRules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data;
using System.Data.Common;
using System.Reflection;
using System.Web;




namespace serin_viaticosRules.Gateways
{

    public partial class PerfilesUsuariosGateway : BaseGateway<PerfilesUsuariosObject, PerfilesUsuariosObjectList>, IGenericGateway
    {

        #region "Singleton"

        static PerfilesUsuariosGateway _instance;

        private PerfilesUsuariosGateway()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        
        
        public static PerfilesUsuariosGateway Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new PerfilesUsuariosGateway();
                else {
                    PerfilesUsuariosGateway inst = HttpContext.Current.Items["serin_viaticosRules.PerfilesUsuariosGatewaySingleton"] as PerfilesUsuariosGateway;
                    if (inst == null) {
                        inst = new PerfilesUsuariosGateway();
                        HttpContext.Current.Items.Add("serin_viaticosRules.PerfilesUsuariosGatewaySingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }

        #endregion

        /// <summary>
        /// Return the mapped table name
        /// </summary>
        protected override string TableName
        {
            get { return "PerfilesUsuarios"; }
        }

        protected override string RuleName
        {
            get {return typeof(PerfilesUsuariosGateway).FullName;}
        }


        

        /// <summary>
        /// Assign properties values based on DataReader
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, PerfilesUsuariosObject entity)
        {
            
            IMappeablePerfilesUsuariosObject PerfilesUsuarios = (IMappeablePerfilesUsuariosObject)entity;
            PerfilesUsuarios.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
reader.GetInt32(2));
            ((IObject)entity).State = ObjectState.Restored;
        }

        /// <summary>
        /// Get field values to call insertion stored procedure
        /// </summary>
        protected override object[] GetFieldsForInsert(PerfilesUsuariosObject entity)
        {

            IMappeablePerfilesUsuariosObject PerfilesUsuarios = (IMappeablePerfilesUsuariosObject)entity;
            return PerfilesUsuarios.GetFieldsForInsert();
        }

        /// <summary>
        /// Get field values to call update stored procedure
        /// </summary>
        protected override object[] GetFieldsForUpdate(PerfilesUsuariosObject entity)
        {

            IMappeablePerfilesUsuariosObject PerfilesUsuarios = (IMappeablePerfilesUsuariosObject)entity;
            return PerfilesUsuarios.GetFieldsForUpdate();
        }

        /// <summary>
        /// Get field values to call deletion stored procedure
        /// </summary>
        protected override object[] GetFieldsForDelete(PerfilesUsuariosObject entity)
        {

            IMappeablePerfilesUsuariosObject PerfilesUsuarios = (IMappeablePerfilesUsuariosObject)entity;
            return PerfilesUsuarios.GetFieldsForDelete();
        }

        /// <summary>
        /// Raised after insert and update. Update properties from Output parameters
        /// </summary>
        protected override void UpdateObjectFromOutputParams(PerfilesUsuariosObject row, object[] parameters)
        {
            ((IMappeablePerfilesUsuariosObject) row).UpdateObjectFromOutputParams(parameters);
            ((IObject)row).State = ObjectState.Restored;
        }

        /// <summary>
        /// StoredProceduresPrefix, for example: coop_
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "coop_";
        }


        /// <summary>
        /// Get a PerfilesUsuariosObject by execute a SQL Query Text
        /// </summary>
        public PerfilesUsuariosObject GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a PerfilesUsuariosObjectList by execute a SQL Query Text
        /// </summary>
        public PerfilesUsuariosObjectList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// Get a PerfilesUsuariosObject by calling a Stored Procedure
        /// </summary>
        public PerfilesUsuariosObject GetOne(System.Int32 IdUsuarioPerfil)
        {
            return base.GetOne(new PerfilesUsuariosObject(IdUsuarioPerfil));
        }


        // GetBy Objects and Params
            


        

        /// <summary>
        /// Get a PerfilesUsuariosObjectList by calling a Stored Procedure
        /// </summary>
        public PerfilesUsuariosObjectList GetByPerfiles(DbTransaction transaction,System.Int32 IdPerfil)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PerfilesUsuarios_GetByPerfiles", IdPerfil);
        }

        /// <summary>
        /// Get a PerfilesUsuariosObjectList by calling a Stored Procedure
        /// </summary>
        public PerfilesUsuariosObjectList GetByPerfiles(DbTransaction transaction, IUniqueIdentifiable Perfiles)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "PerfilesUsuarios_GetByPerfiles", Perfiles.Identifier());
        }

    

        

        /// <summary>
        /// Get a PerfilesUsuariosObjectList by calling a Stored Procedure
        /// </summary>
        public PerfilesUsuariosObjectList GetByPerfiles(System.Int32 IdPerfil)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PerfilesUsuarios_GetByPerfiles", IdPerfil);
        }

        /// <summary>
        /// Get a PerfilesUsuariosObjectList by calling a Stored Procedure
        /// </summary>
        public PerfilesUsuariosObjectList GetByPerfiles(IUniqueIdentifiable Perfiles)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "PerfilesUsuarios_GetByPerfiles", Perfiles.Identifier());
        }

    

        /// <summary>
        /// Delete PerfilesUsuarios
        /// </summary>
        public void Delete(System.Int32 IdUsuarioPerfil)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "PerfilesUsuarios_Delete", IdUsuarioPerfil);
        }

        /// <summary>
        /// Delete PerfilesUsuarios
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 IdUsuarioPerfil)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "PerfilesUsuarios_Delete", IdUsuarioPerfil);
        }

            

        

        /// <summary>
        /// Delete PerfilesUsuarios by Perfiles
        /// </summary>
        public void DeleteByPerfiles(System.Int32 IdPerfil)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "PerfilesUsuarios_DeleteByPerfiles", IdPerfil);
        }

        /// <summary>
        /// Delete PerfilesUsuarios by Perfiles
        /// </summary>
        public void DeleteByPerfiles(DbTransaction transaction, System.Int32 IdPerfil)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "PerfilesUsuarios_DeleteByPerfiles", IdPerfil);
        }

        /// <summary>
        /// Delete PerfilesUsuarios by Perfiles
        /// </summary>
        public void DeleteByPerfiles(IUniqueIdentifiable Perfiles)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "PerfilesUsuarios_DeleteByPerfiles", Perfiles.Identifier());
        }

        /// <summary>
        /// Delete PerfilesUsuarios by Perfiles
        /// </summary>
        public void DeleteByPerfiles(DbTransaction transaction, IUniqueIdentifiable Perfiles)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "PerfilesUsuarios_DeleteByPerfiles", Perfiles.Identifier());
        }


    


        //Database Queries 
        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }

}








