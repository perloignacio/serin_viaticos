
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is ReservasAereosMapper.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;
using serin_viaticosRules.Entities;
using serin_viaticosRules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data.Common;
using System.Reflection;
using System.Web;
using System.Data;

namespace serin_viaticosRules.Mappers
{

    
    /// <summary>
    /// 
    /// </summary>
    public partial class ReservasAereosMapper : BaseGateway<ReservasAereos, ReservasAereosList>, IGenericGateway
    {


        #region "Singleton"

        static ReservasAereosMapper _instance;

        private ReservasAereosMapper()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static ReservasAereosMapper Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new ReservasAereosMapper();
                else {
                    ReservasAereosMapper inst = HttpContext.Current.Items["serin_viaticosRules.ReservasAereosMapperSingleton"] as ReservasAereosMapper;
                    if (inst == null) {
                        inst = new ReservasAereosMapper();
                        HttpContext.Current.Items.Add("serin_viaticosRules.ReservasAereosMapperSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"IdReservaAereo"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(ReservasAereos);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "ReservasAereos"; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string RuleName
        {
            get {return typeof(ReservasAereosMapper).FullName;}
        }


        

        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, ReservasAereos entity)
        {
            
            IMappeableReservasAereosObject ReservasAereos = (IMappeableReservasAereosObject)entity;
            ReservasAereos.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
reader.GetInt32(2),
reader.GetInt32(3),
reader.GetDateTime(4),
reader.GetBoolean(5),
(reader.IsDBNull(6)) ? new System.Nullable<System.Decimal>() : reader.GetDecimal(6));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForInsert(ReservasAereos entity)
        {

            IMappeableReservasAereosObject ReservasAereos = (IMappeableReservasAereosObject)entity;
            return ReservasAereos.GetFieldsForInsert();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForUpdate(ReservasAereos entity)
        {

            IMappeableReservasAereosObject ReservasAereos = (IMappeableReservasAereosObject)entity;
            return ReservasAereos.GetFieldsForUpdate();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForDelete(ReservasAereos entity)
        {

            IMappeableReservasAereosObject ReservasAereos = (IMappeableReservasAereosObject)entity;
            return ReservasAereos.GetFieldsForDelete();
        }


        /// <summary>
        /// Raised after insert and update
        /// </summary>
        protected override void UpdateObjectFromOutputParams(ReservasAereos entity, object[] parameters)
        {
            // Update properties from Output parameters
            ((IMappeableReservasAereosObject) entity).UpdateObjectFromOutputParams(parameters);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "coop_";
        }


        


        

        /// <summary>
        /// Complete the aggregations for this entity. 
        /// </summary>
        protected override void CompleteEntity(ReservasAereos entity)
        {
            Entities.Ubicaciones UbicacionesDestinoEntity = null; // Lazy load
Entities.Ubicaciones UbicacionesOrigenEntity= null;

UbicacionesOrigenEntity = Mappers.UbicacionesMapper.Instance().GetOne(entity.IdOrigen);
            ((IMappeableReservasAereos)entity).CompleteEntity(UbicacionesDestinoEntity, UbicacionesOrigenEntity);
        }


        # region CRUD Operations
        

        # endregion

        /// <summary>
        /// Delete children for this entity
        /// </summary>
        public void DeleteChildren(DbTransaction transaction, IUniqueIdentifiable entity)
        {
                        
        }


          





        /// <summary>
        /// Get a ReservasAereos by execute a SQL Query Text
        /// </summary>
        public ReservasAereos GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a ReservasAereosList by execute a SQL Query Text
        /// </summary>
        public ReservasAereosList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// 
        /// </summary>
        public ReservasAereos GetOne(System.Int32 IdReservaAereo)
        {
            return base.GetOne(new ReservasAereos(IdReservaAereo));
        }


        // GetOne By Objects and Params
            


        

        /// <summary>
        /// 
        /// </summary>
        public ReservasAereosList GetByUbicacionesDestino(DbTransaction transaction, System.Int32 IdDestino)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesDestino", IdDestino);
        }

        /// <summary>
        /// 
        /// </summary>
        public ReservasAereosList GetByUbicacionesDestino(DbTransaction transaction, IUniqueIdentifiable Ubicaciones)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesDestino", Ubicaciones.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ReservasAereosList GetByUbicacionesOrigen(DbTransaction transaction, System.Int32 IdOrigen)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesOrigen", IdOrigen);
        }

        /// <summary>
        /// 
        /// </summary>
        public ReservasAereosList GetByUbicacionesOrigen(DbTransaction transaction, IUniqueIdentifiable Ubicaciones)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesOrigen", Ubicaciones.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public ReservasAereosList GetByUbicacionesDestino(System.Int32 IdDestino)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesDestino", IdDestino);
        }

        /// <summary>
        /// 
        /// </summary>
        public ReservasAereosList GetByUbicacionesDestino(IUniqueIdentifiable Ubicaciones)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesDestino", Ubicaciones.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ReservasAereosList GetByUbicacionesOrigen(System.Int32 IdOrigen)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesOrigen", IdOrigen);
        }

        /// <summary>
        /// 
        /// </summary>
        public ReservasAereosList GetByUbicacionesOrigen(IUniqueIdentifiable Ubicaciones)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesOrigen", Ubicaciones.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public void Delete(System.Int32 IdReservaAereo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ReservasAereos_Delete", IdReservaAereo);
        }

        /// <summary>
        /// 
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 IdReservaAereo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasAereos_Delete", IdReservaAereo);
        }


        // Delete By Objects and Params
            



        

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUbicacionesDestino(System.Int32 IdDestino)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ReservasAereos_DeleteByUbicacionesDestino", IdDestino);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUbicacionesDestino(DbTransaction transaction, System.Int32 IdDestino)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasAereos_DeleteByUbicacionesDestino", IdDestino);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUbicacionesDestino(IUniqueIdentifiable Ubicaciones)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ReservasAereos_DeleteByUbicacionesDestino", Ubicaciones.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUbicacionesDestino(DbTransaction transaction, IUniqueIdentifiable Ubicaciones)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasAereos_DeleteByUbicacionesDestino", Ubicaciones.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUbicacionesOrigen(System.Int32 IdOrigen)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ReservasAereos_DeleteByUbicacionesOrigen", IdOrigen);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUbicacionesOrigen(DbTransaction transaction, System.Int32 IdOrigen)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasAereos_DeleteByUbicacionesOrigen", IdOrigen);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUbicacionesOrigen(IUniqueIdentifiable Ubicaciones)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ReservasAereos_DeleteByUbicacionesOrigen", Ubicaciones.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUbicacionesOrigen(DbTransaction transaction, IUniqueIdentifiable Ubicaciones)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasAereos_DeleteByUbicacionesOrigen", Ubicaciones.Identifier());
        }


    


        //Database Queries 
        


        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }


}

namespace serin_viaticosRules.Wrappers
{
    /// <summary>
    /// 
    /// </summary>
    public class ReservasAereosMapperWrapper
    {

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            return Instance().GetPKPropertiesNames();
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return Instance().GetMappingType();
        }



        /// <summary>
        /// 
        /// </summary>
        public serin_viaticosRules.Mappers.ReservasAereosMapper Instance()
        {
            return serin_viaticosRules.Mappers.ReservasAereosMapper.Instance(); 
        }
        
        /// <summary>
        /// Get a ReservasAereosEntity by calling a Stored Procedure
        /// </summary>
        public Entities.ReservasAereos GetOne(System.Int32 IdReservaAereo) {
            return Instance().GetOne( IdReservaAereo);
        }

        // GetBy Objects and Params
            

        

        /// <summary>
        /// Get a ReservasAereosList by calling a Stored Procedure
        /// </summary>
        public Entities.ReservasAereosList GetByUbicacionesDestino(System.Int32 IdDestino)
        {
            return Instance().GetByUbicacionesDestino(IdDestino);
        }

        /// <summary>
        /// Get a ReservasAereosList by calling a Stored Procedure
        /// </summary>
        public Entities.ReservasAereosList GetByUbicacionesDestino(IUniqueIdentifiable Ubicaciones)
        {
            return Instance().GetByUbicacionesDestino(Ubicaciones);
        }

    

        /// <summary>
        /// Get a ReservasAereosList by calling a Stored Procedure
        /// </summary>
        public Entities.ReservasAereosList GetByUbicacionesOrigen(System.Int32 IdOrigen)
        {
            return Instance().GetByUbicacionesOrigen(IdOrigen);
        }

        /// <summary>
        /// Get a ReservasAereosList by calling a Stored Procedure
        /// </summary>
        public Entities.ReservasAereosList GetByUbicacionesOrigen(IUniqueIdentifiable Ubicaciones)
        {
            return Instance().GetByUbicacionesOrigen(Ubicaciones);
        }

    

       

        /// <summary>
        /// Delete children for ReservasAereos
        /// </summary>
        public void DeleteChildren(DbTransaction transaction, ReservasAereos entity)
        {
            Instance().DeleteChildren(transaction, entity);
        }

        

            

        

        /// <summary>
        /// Delete ReservasAereos by UbicacionesDestino
        /// </summary>
        public void DeleteByUbicacionesDestino(System.Int32 IdDestino)
        {
            Instance().DeleteByUbicacionesDestino(IdDestino);
        }

        /// <summary>
        /// Delete ReservasAereos by UbicacionesDestino
        /// </summary>
        public void DeleteByUbicacionesDestino(IUniqueIdentifiable Ubicaciones)
        {
            Instance().DeleteByUbicacionesDestino(Ubicaciones);
        }

    

        /// <summary>
        /// Delete ReservasAereos by UbicacionesOrigen
        /// </summary>
        public void DeleteByUbicacionesOrigen(System.Int32 IdOrigen)
        {
            Instance().DeleteByUbicacionesOrigen(IdOrigen);
        }

        /// <summary>
        /// Delete ReservasAereos by UbicacionesOrigen
        /// </summary>
        public void DeleteByUbicacionesOrigen(IUniqueIdentifiable Ubicaciones)
        {
            Instance().DeleteByUbicacionesOrigen(Ubicaciones);
        }

    
        /// <summary>
        /// Delete ReservasAereos 
        /// </summary>
        public void Delete(System.Int32 IdReservaAereo){
            Instance().Delete(IdReservaAereo);
        }

        /// <summary>
        /// Delete ReservasAereos 
        /// </summary>
        public void Delete(Entities.ReservasAereos entity ){
            Instance().Delete(entity);
        }

        /// <summary>
        /// Save ReservasAereos  
        /// </summary>
        public void Save(Entities.ReservasAereos entity){
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert ReservasAereos 
        /// </summary>
        public void Insert(Entities.ReservasAereos entity){
            Instance().Insert(entity);
        }

        /// <summary>
        /// GetAll ReservasAereos 
        /// </summary>
        public Entities.ReservasAereosList GetAll(){  
            return Instance().GetAll();
        }

        /// <summary>
        /// Save ReservasAereos 
        /// </summary>
        public void Save(System.Int32 IdReservaAereo, System.Int32 IdOrigen, System.Int32 IdDestino, System.Int32 CantPasajeros, System.DateTime FechaViaje, System.Boolean IdaVuelta, System.Decimal Precio){
            Entities.ReservasAereos entity = Instance().GetOne(IdReservaAereo);
            if (entity == null)
                throw new ApplicationException(String.Format("Entity not found. IUniqueIdentifiable Values: {0} = {1}", "IdReservaAereo", IdReservaAereo));

            entity.IdOrigen = IdOrigen;
            entity.IdDestino = IdDestino;
            entity.CantPasajeros = CantPasajeros;
            entity.FechaViaje = FechaViaje;
            entity.IdaVuelta = IdaVuelta;
            entity.Precio = Precio;
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert ReservasAereos
        /// </summary>
        public void Insert(System.Int32 IdReservaAereo, System.Int32 IdOrigen, System.Int32 IdDestino, System.Int32 CantPasajeros, System.DateTime FechaViaje, System.Boolean IdaVuelta, System.Decimal Precio){
            Entities.ReservasAereos entity = new Entities.ReservasAereos();

            entity.IdReservaAereo = IdReservaAereo;
            entity.IdOrigen = IdOrigen;
            entity.IdDestino = IdDestino;
            entity.CantPasajeros = CantPasajeros;
            entity.FechaViaje = FechaViaje;
            entity.IdaVuelta = IdaVuelta;
            entity.Precio = Precio;
            Instance().Insert(entity);
        }


        //Database Queries 
        


    }
}





namespace serin_viaticosRules.Loaders
{

    /// <summary>
    /// 
    /// </summary>
    public partial class ReservasAereosLoader<T> : BaseLoader< T, ReservasAereos, ObjectList<T>>, IGenericGateway where T : ReservasAereos, new()
    {

        #region "Singleton"

        static ReservasAereosLoader<T> _instance;

        private ReservasAereosLoader()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static ReservasAereosLoader<T> Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new ReservasAereosLoader<T>();
                else {
                    ReservasAereosLoader<T> inst = HttpContext.Current.Items["serin_viaticosRules.ReservasAereosLoaderSingleton"] as ReservasAereosLoader<T>;
                    if (inst == null) {
                        inst = new ReservasAereosLoader<T>();
                        HttpContext.Current.Items.Add("serin_viaticosRules.ReservasAereosLoaderSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"IdReservaAereo"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(ReservasAereos);
        }


        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "ReservasAereos"; }
        }

        
        
        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, ReservasAereos entity)
        {
            
            IMappeableReservasAereosObject ReservasAereos = (IMappeableReservasAereosObject)entity;
            ReservasAereos.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
reader.GetInt32(2),
reader.GetInt32(3),
reader.GetDateTime(4),
reader.GetBoolean(5),
(reader.IsDBNull(6)) ? new System.Nullable<System.Decimal>() : reader.GetDecimal(6));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "coop_";
        }


        
    

        

        /// <summary>
        /// Complete the aggregations for this entity. 
        /// </summary>
        protected override void CompleteEntity(T entity)
        {
            Entities.Ubicaciones UbicacionesDestinoEntity = null; // Lazy load
Entities.Ubicaciones UbicacionesOrigenEntity= null;

UbicacionesOrigenEntity = Mappers.UbicacionesMapper.Instance().GetOne(entity.IdOrigen);
            ((IMappeableReservasAereos)entity).CompleteEntity(UbicacionesDestinoEntity, UbicacionesOrigenEntity);
        }


        



        /// <summary>
        /// Get a ReservasAereos by execute a SQL Query Text
        /// </summary>
        public T GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a ReservasAereosList by execute a SQL Query Text
        /// </summary>
        public ObjectList<T> GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }

        /// <summary>
        /// GetOne By Params
        /// </summary>
        public T GetOne(System.Int32 IdReservaAereo)
        {
            return base.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasAereos_GetOne", IdReservaAereo);
        }


        // GetOne By Objects and Params
            


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUbicacionesDestino(DbTransaction transaction, System.Int32 IdDestino)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesDestino", IdDestino);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUbicacionesDestino(DbTransaction transaction, IUniqueIdentifiable Ubicaciones)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesDestino", Ubicaciones.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUbicacionesOrigen(DbTransaction transaction, System.Int32 IdOrigen)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesOrigen", IdOrigen);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUbicacionesOrigen(DbTransaction transaction, IUniqueIdentifiable Ubicaciones)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesOrigen", Ubicaciones.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUbicacionesDestino(System.Int32 IdDestino)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesDestino", IdDestino);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUbicacionesDestino(IUniqueIdentifiable Ubicaciones)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesDestino", Ubicaciones.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUbicacionesOrigen(System.Int32 IdOrigen)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesOrigen", IdOrigen);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUbicacionesOrigen(IUniqueIdentifiable Ubicaciones)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasAereos_GetByUbicacionesOrigen", Ubicaciones.Identifier());
        }

    

        //Database Queries 
        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion

    }
}





