
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is ReservasHotelMapper.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;
using serin_viaticosRules.Entities;
using serin_viaticosRules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data.Common;
using System.Reflection;
using System.Web;
using System.Data;

namespace serin_viaticosRules.Mappers
{

    
    /// <summary>
    /// 
    /// </summary>
    public partial class ReservasHotelMapper : BaseGateway<ReservasHotel, ReservasHotelList>, IGenericGateway
    {


        #region "Singleton"

        static ReservasHotelMapper _instance;

        private ReservasHotelMapper()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static ReservasHotelMapper Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new ReservasHotelMapper();
                else {
                    ReservasHotelMapper inst = HttpContext.Current.Items["serin_viaticosRules.ReservasHotelMapperSingleton"] as ReservasHotelMapper;
                    if (inst == null) {
                        inst = new ReservasHotelMapper();
                        HttpContext.Current.Items.Add("serin_viaticosRules.ReservasHotelMapperSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"IdReservaHotel"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(ReservasHotel);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "ReservasHotel"; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string RuleName
        {
            get {return typeof(ReservasHotelMapper).FullName;}
        }


        

        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, ReservasHotel entity)
        {
            
            IMappeableReservasHotelObject ReservasHotel = (IMappeableReservasHotelObject)entity;
            ReservasHotel.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
reader.GetInt32(2),
reader.GetInt32(3),
reader.GetInt32(4),
(reader.IsDBNull(5)) ? "" : reader.GetString(5),
(reader.IsDBNull(6)) ? new System.Nullable<System.Decimal>() : reader.GetDecimal(6),
reader.GetDateTime(7),
reader.GetDateTime(8));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForInsert(ReservasHotel entity)
        {

            IMappeableReservasHotelObject ReservasHotel = (IMappeableReservasHotelObject)entity;
            return ReservasHotel.GetFieldsForInsert();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForUpdate(ReservasHotel entity)
        {

            IMappeableReservasHotelObject ReservasHotel = (IMappeableReservasHotelObject)entity;
            return ReservasHotel.GetFieldsForUpdate();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForDelete(ReservasHotel entity)
        {

            IMappeableReservasHotelObject ReservasHotel = (IMappeableReservasHotelObject)entity;
            return ReservasHotel.GetFieldsForDelete();
        }


        /// <summary>
        /// Raised after insert and update
        /// </summary>
        protected override void UpdateObjectFromOutputParams(ReservasHotel entity, object[] parameters)
        {
            // Update properties from Output parameters
            ((IMappeableReservasHotelObject) entity).UpdateObjectFromOutputParams(parameters);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "coop_";
        }


        


        

        /// <summary>
        /// Complete the aggregations for this entity. 
        /// </summary>
        protected override void CompleteEntity(ReservasHotel entity)
        {
            Entities.Hoteles HotelesEntity = null; // Lazy load
Entities.Ubicaciones UbicacionesEntity = null; // Lazy load
            ((IMappeableReservasHotel)entity).CompleteEntity(HotelesEntity, UbicacionesEntity);
        }


        # region CRUD Operations
        

        # endregion

        /// <summary>
        /// Delete children for this entity
        /// </summary>
        public void DeleteChildren(DbTransaction transaction, IUniqueIdentifiable entity)
        {
                        
        }


          





        /// <summary>
        /// Get a ReservasHotel by execute a SQL Query Text
        /// </summary>
        public ReservasHotel GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a ReservasHotelList by execute a SQL Query Text
        /// </summary>
        public ReservasHotelList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// 
        /// </summary>
        public ReservasHotel GetOne(System.Int32 IdReservaHotel)
        {
            return base.GetOne(new ReservasHotel(IdReservaHotel));
        }


        // GetOne By Objects and Params
            


        

        /// <summary>
        /// 
        /// </summary>
        public ReservasHotelList GetByHoteles(DbTransaction transaction, System.Int32 IdHotel)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_GetByHoteles", IdHotel);
        }

        /// <summary>
        /// 
        /// </summary>
        public ReservasHotelList GetByHoteles(DbTransaction transaction, IUniqueIdentifiable Hoteles)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_GetByHoteles", Hoteles.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ReservasHotelList GetByUbicaciones(DbTransaction transaction, System.Int32 IdDestino)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_GetByUbicaciones", IdDestino);
        }

        /// <summary>
        /// 
        /// </summary>
        public ReservasHotelList GetByUbicaciones(DbTransaction transaction, IUniqueIdentifiable Ubicaciones)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_GetByUbicaciones", Ubicaciones.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public ReservasHotelList GetByHoteles(System.Int32 IdHotel)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_GetByHoteles", IdHotel);
        }

        /// <summary>
        /// 
        /// </summary>
        public ReservasHotelList GetByHoteles(IUniqueIdentifiable Hoteles)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_GetByHoteles", Hoteles.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ReservasHotelList GetByUbicaciones(System.Int32 IdDestino)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_GetByUbicaciones", IdDestino);
        }

        /// <summary>
        /// 
        /// </summary>
        public ReservasHotelList GetByUbicaciones(IUniqueIdentifiable Ubicaciones)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_GetByUbicaciones", Ubicaciones.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public void Delete(System.Int32 IdReservaHotel)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_Delete", IdReservaHotel);
        }

        /// <summary>
        /// 
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 IdReservaHotel)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_Delete", IdReservaHotel);
        }


        // Delete By Objects and Params
            



        

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByHoteles(System.Int32 IdHotel)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_DeleteByHoteles", IdHotel);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByHoteles(DbTransaction transaction, System.Int32 IdHotel)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_DeleteByHoteles", IdHotel);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByHoteles(IUniqueIdentifiable Hoteles)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_DeleteByHoteles", Hoteles.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByHoteles(DbTransaction transaction, IUniqueIdentifiable Hoteles)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_DeleteByHoteles", Hoteles.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUbicaciones(System.Int32 IdDestino)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_DeleteByUbicaciones", IdDestino);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUbicaciones(DbTransaction transaction, System.Int32 IdDestino)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_DeleteByUbicaciones", IdDestino);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUbicaciones(IUniqueIdentifiable Ubicaciones)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_DeleteByUbicaciones", Ubicaciones.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByUbicaciones(DbTransaction transaction, IUniqueIdentifiable Ubicaciones)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_DeleteByUbicaciones", Ubicaciones.Identifier());
        }


    


        //Database Queries 
        


        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }


}

namespace serin_viaticosRules.Wrappers
{
    /// <summary>
    /// 
    /// </summary>
    public class ReservasHotelMapperWrapper
    {

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            return Instance().GetPKPropertiesNames();
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return Instance().GetMappingType();
        }



        /// <summary>
        /// 
        /// </summary>
        public serin_viaticosRules.Mappers.ReservasHotelMapper Instance()
        {
            return serin_viaticosRules.Mappers.ReservasHotelMapper.Instance(); 
        }
        
        /// <summary>
        /// Get a ReservasHotelEntity by calling a Stored Procedure
        /// </summary>
        public Entities.ReservasHotel GetOne(System.Int32 IdReservaHotel) {
            return Instance().GetOne( IdReservaHotel);
        }

        // GetBy Objects and Params
            

        

        /// <summary>
        /// Get a ReservasHotelList by calling a Stored Procedure
        /// </summary>
        public Entities.ReservasHotelList GetByHoteles(System.Int32 IdHotel)
        {
            return Instance().GetByHoteles(IdHotel);
        }

        /// <summary>
        /// Get a ReservasHotelList by calling a Stored Procedure
        /// </summary>
        public Entities.ReservasHotelList GetByHoteles(IUniqueIdentifiable Hoteles)
        {
            return Instance().GetByHoteles(Hoteles);
        }

    

        /// <summary>
        /// Get a ReservasHotelList by calling a Stored Procedure
        /// </summary>
        public Entities.ReservasHotelList GetByUbicaciones(System.Int32 IdDestino)
        {
            return Instance().GetByUbicaciones(IdDestino);
        }

        /// <summary>
        /// Get a ReservasHotelList by calling a Stored Procedure
        /// </summary>
        public Entities.ReservasHotelList GetByUbicaciones(IUniqueIdentifiable Ubicaciones)
        {
            return Instance().GetByUbicaciones(Ubicaciones);
        }

    

       

        /// <summary>
        /// Delete children for ReservasHotel
        /// </summary>
        public void DeleteChildren(DbTransaction transaction, ReservasHotel entity)
        {
            Instance().DeleteChildren(transaction, entity);
        }

        

            

        

        /// <summary>
        /// Delete ReservasHotel by Hoteles
        /// </summary>
        public void DeleteByHoteles(System.Int32 IdHotel)
        {
            Instance().DeleteByHoteles(IdHotel);
        }

        /// <summary>
        /// Delete ReservasHotel by Hoteles
        /// </summary>
        public void DeleteByHoteles(IUniqueIdentifiable Hoteles)
        {
            Instance().DeleteByHoteles(Hoteles);
        }

    

        /// <summary>
        /// Delete ReservasHotel by Ubicaciones
        /// </summary>
        public void DeleteByUbicaciones(System.Int32 IdDestino)
        {
            Instance().DeleteByUbicaciones(IdDestino);
        }

        /// <summary>
        /// Delete ReservasHotel by Ubicaciones
        /// </summary>
        public void DeleteByUbicaciones(IUniqueIdentifiable Ubicaciones)
        {
            Instance().DeleteByUbicaciones(Ubicaciones);
        }

    
        /// <summary>
        /// Delete ReservasHotel 
        /// </summary>
        public void Delete(System.Int32 IdReservaHotel){
            Instance().Delete(IdReservaHotel);
        }

        /// <summary>
        /// Delete ReservasHotel 
        /// </summary>
        public void Delete(Entities.ReservasHotel entity ){
            Instance().Delete(entity);
        }

        /// <summary>
        /// Save ReservasHotel  
        /// </summary>
        public void Save(Entities.ReservasHotel entity){
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert ReservasHotel 
        /// </summary>
        public void Insert(Entities.ReservasHotel entity){
            Instance().Insert(entity);
        }

        /// <summary>
        /// GetAll ReservasHotel 
        /// </summary>
        public Entities.ReservasHotelList GetAll(){  
            return Instance().GetAll();
        }

        /// <summary>
        /// Save ReservasHotel 
        /// </summary>
        public void Save(System.Int32 IdReservaHotel, System.Int32 IdDestino, System.Int32 CantHabitaciones, System.Int32 CantPasajeros, System.Int32 IdHotel, System.String CodigoReserva, System.Decimal Precio, System.DateTime Checkin, System.DateTime Checkout){
            Entities.ReservasHotel entity = Instance().GetOne(IdReservaHotel);
            if (entity == null)
                throw new ApplicationException(String.Format("Entity not found. IUniqueIdentifiable Values: {0} = {1}", "IdReservaHotel", IdReservaHotel));

            entity.IdDestino = IdDestino;
            entity.CantHabitaciones = CantHabitaciones;
            entity.CantPasajeros = CantPasajeros;
            entity.IdHotel = IdHotel;
            entity.CodigoReserva = CodigoReserva;
            entity.Precio = Precio;
            entity.Checkin = Checkin;
            entity.Checkout = Checkout;
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert ReservasHotel
        /// </summary>
        public void Insert(System.Int32 IdDestino, System.Int32 CantHabitaciones, System.Int32 CantPasajeros, System.Int32 IdHotel, System.String CodigoReserva, System.Decimal Precio, System.DateTime Checkin, System.DateTime Checkout){
            Entities.ReservasHotel entity = new Entities.ReservasHotel();

            entity.IdDestino = IdDestino;
            entity.CantHabitaciones = CantHabitaciones;
            entity.CantPasajeros = CantPasajeros;
            entity.IdHotel = IdHotel;
            entity.CodigoReserva = CodigoReserva;
            entity.Precio = Precio;
            entity.Checkin = Checkin;
            entity.Checkout = Checkout;
            Instance().Insert(entity);
        }


        //Database Queries 
        


    }
}





namespace serin_viaticosRules.Loaders
{

    /// <summary>
    /// 
    /// </summary>
    public partial class ReservasHotelLoader<T> : BaseLoader< T, ReservasHotel, ObjectList<T>>, IGenericGateway where T : ReservasHotel, new()
    {

        #region "Singleton"

        static ReservasHotelLoader<T> _instance;

        private ReservasHotelLoader()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static ReservasHotelLoader<T> Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new ReservasHotelLoader<T>();
                else {
                    ReservasHotelLoader<T> inst = HttpContext.Current.Items["serin_viaticosRules.ReservasHotelLoaderSingleton"] as ReservasHotelLoader<T>;
                    if (inst == null) {
                        inst = new ReservasHotelLoader<T>();
                        HttpContext.Current.Items.Add("serin_viaticosRules.ReservasHotelLoaderSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"IdReservaHotel"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(ReservasHotel);
        }


        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "ReservasHotel"; }
        }

        
        
        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, ReservasHotel entity)
        {
            
            IMappeableReservasHotelObject ReservasHotel = (IMappeableReservasHotelObject)entity;
            ReservasHotel.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
reader.GetInt32(2),
reader.GetInt32(3),
reader.GetInt32(4),
(reader.IsDBNull(5)) ? "" : reader.GetString(5),
(reader.IsDBNull(6)) ? new System.Nullable<System.Decimal>() : reader.GetDecimal(6),
reader.GetDateTime(7),
reader.GetDateTime(8));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "coop_";
        }


        
    

        

        /// <summary>
        /// Complete the aggregations for this entity. 
        /// </summary>
        protected override void CompleteEntity(T entity)
        {
            Entities.Hoteles HotelesEntity = null; // Lazy load
Entities.Ubicaciones UbicacionesEntity = null; // Lazy load
            ((IMappeableReservasHotel)entity).CompleteEntity(HotelesEntity, UbicacionesEntity);
        }


        



        /// <summary>
        /// Get a ReservasHotel by execute a SQL Query Text
        /// </summary>
        public T GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a ReservasHotelList by execute a SQL Query Text
        /// </summary>
        public ObjectList<T> GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }

        /// <summary>
        /// GetOne By Params
        /// </summary>
        public T GetOne(System.Int32 IdReservaHotel)
        {
            return base.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_GetOne", IdReservaHotel);
        }


        // GetOne By Objects and Params
            


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByHoteles(DbTransaction transaction, System.Int32 IdHotel)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_GetByHoteles", IdHotel);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByHoteles(DbTransaction transaction, IUniqueIdentifiable Hoteles)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_GetByHoteles", Hoteles.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUbicaciones(DbTransaction transaction, System.Int32 IdDestino)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_GetByUbicaciones", IdDestino);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUbicaciones(DbTransaction transaction, IUniqueIdentifiable Ubicaciones)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ReservasHotel_GetByUbicaciones", Ubicaciones.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByHoteles(System.Int32 IdHotel)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_GetByHoteles", IdHotel);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByHoteles(IUniqueIdentifiable Hoteles)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_GetByHoteles", Hoteles.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUbicaciones(System.Int32 IdDestino)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_GetByUbicaciones", IdDestino);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByUbicaciones(IUniqueIdentifiable Ubicaciones)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ReservasHotel_GetByUbicaciones", Ubicaciones.Identifier());
        }

    

        //Database Queries 
        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion

    }
}





