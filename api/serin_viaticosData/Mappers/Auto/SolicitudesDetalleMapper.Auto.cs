
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is SolicitudesDetalleMapper.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;
using serin_viaticosRules.Entities;
using serin_viaticosRules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data.Common;
using System.Reflection;
using System.Web;
using System.Data;

namespace serin_viaticosRules.Mappers
{

    
    /// <summary>
    /// 
    /// </summary>
    public partial class SolicitudesDetalleMapper : BaseGateway<SolicitudesDetalle, SolicitudesDetalleList>, IGenericGateway
    {


        #region "Singleton"

        static SolicitudesDetalleMapper _instance;

        private SolicitudesDetalleMapper()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static SolicitudesDetalleMapper Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new SolicitudesDetalleMapper();
                else {
                    SolicitudesDetalleMapper inst = HttpContext.Current.Items["serin_viaticosRules.SolicitudesDetalleMapperSingleton"] as SolicitudesDetalleMapper;
                    if (inst == null) {
                        inst = new SolicitudesDetalleMapper();
                        HttpContext.Current.Items.Add("serin_viaticosRules.SolicitudesDetalleMapperSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"IdSolicitudDetalle"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(SolicitudesDetalle);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "SolicitudesDetalle"; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string RuleName
        {
            get {return typeof(SolicitudesDetalleMapper).FullName;}
        }


        

        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, SolicitudesDetalle entity)
        {
            
            IMappeableSolicitudesDetalleObject SolicitudesDetalle = (IMappeableSolicitudesDetalleObject)entity;
            SolicitudesDetalle.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
reader.GetInt32(2),
(reader.IsDBNull(3)) ? new System.Nullable<System.Int32>() : reader.GetInt32(3),
(reader.IsDBNull(4)) ? new System.Nullable<System.Int32>() : reader.GetInt32(4),
(reader.IsDBNull(5)) ? new System.Nullable<System.Int32>() : reader.GetInt32(5),
(reader.IsDBNull(6)) ? new System.Nullable<System.Int32>() : reader.GetInt32(6),
(reader.IsDBNull(7)) ? "" : reader.GetString(7));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForInsert(SolicitudesDetalle entity)
        {

            IMappeableSolicitudesDetalleObject SolicitudesDetalle = (IMappeableSolicitudesDetalleObject)entity;
            return SolicitudesDetalle.GetFieldsForInsert();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForUpdate(SolicitudesDetalle entity)
        {

            IMappeableSolicitudesDetalleObject SolicitudesDetalle = (IMappeableSolicitudesDetalleObject)entity;
            return SolicitudesDetalle.GetFieldsForUpdate();
        }

        /// <summary>
        /// 
        /// </summary>
        protected override object[] GetFieldsForDelete(SolicitudesDetalle entity)
        {

            IMappeableSolicitudesDetalleObject SolicitudesDetalle = (IMappeableSolicitudesDetalleObject)entity;
            return SolicitudesDetalle.GetFieldsForDelete();
        }


        /// <summary>
        /// Raised after insert and update
        /// </summary>
        protected override void UpdateObjectFromOutputParams(SolicitudesDetalle entity, object[] parameters)
        {
            // Update properties from Output parameters
            ((IMappeableSolicitudesDetalleObject) entity).UpdateObjectFromOutputParams(parameters);
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "coop_";
        }


        


        

        /// <summary>
        /// Complete the aggregations for this entity. 
        /// </summary>
        protected override void CompleteEntity(SolicitudesDetalle entity)
        {
            Entities.Itinerario ItinerarioEntity = null; // Lazy load
Entities.ReservasAereos ReservasAereosEntity = null; // Lazy load
Entities.ReservasAlquilerAuto ReservasAlquilerAutoEntity = null; // Lazy load
Entities.ReservasHotel ReservasHotelEntity = null; // Lazy load
Entities.Solicitudes SolicitudesEntity = null; // Lazy load
Entities.SolicitudesCategorias SolicitudesCategoriasEntity = null; // Lazy load
            ((IMappeableSolicitudesDetalle)entity).CompleteEntity(ItinerarioEntity, ReservasAereosEntity, ReservasAlquilerAutoEntity, ReservasHotelEntity, SolicitudesEntity, SolicitudesCategoriasEntity);
        }


        # region CRUD Operations
        

        # endregion

        /// <summary>
        /// Delete children for this entity
        /// </summary>
        public void DeleteChildren(DbTransaction transaction, IUniqueIdentifiable entity)
        {
                        
        }


          





        /// <summary>
        /// Get a SolicitudesDetalle by execute a SQL Query Text
        /// </summary>
        public SolicitudesDetalle GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a SolicitudesDetalleList by execute a SQL Query Text
        /// </summary>
        public SolicitudesDetalleList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalle GetOne(System.Int32 IdSolicitudDetalle)
        {
            return base.GetOne(new SolicitudesDetalle(IdSolicitudDetalle));
        }


        // GetOne By Objects and Params
            


        

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByItinerario(DbTransaction transaction, System.Int32 IdItinerario)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByItinerario", IdItinerario);
        }

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByItinerario(DbTransaction transaction, IUniqueIdentifiable Itinerario)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByItinerario", Itinerario.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByReservasAereos(DbTransaction transaction, System.Int32 IdReservaAereo)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAereos", IdReservaAereo);
        }

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByReservasAereos(DbTransaction transaction, IUniqueIdentifiable ReservasAereos)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAereos", ReservasAereos.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByReservasAlquilerAuto(DbTransaction transaction, System.Int32 IdReservaAlquilerAuto)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAlquilerAuto", IdReservaAlquilerAuto);
        }

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByReservasAlquilerAuto(DbTransaction transaction, IUniqueIdentifiable ReservasAlquilerAuto)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAlquilerAuto", ReservasAlquilerAuto.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByReservasHotel(DbTransaction transaction, System.Int32 IdReservaHotel)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasHotel", IdReservaHotel);
        }

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByReservasHotel(DbTransaction transaction, IUniqueIdentifiable ReservasHotel)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasHotel", ReservasHotel.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetBySolicitudes(DbTransaction transaction, System.Int32 IdSolicitud)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudes", IdSolicitud);
        }

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetBySolicitudes(DbTransaction transaction, IUniqueIdentifiable Solicitudes)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudes", Solicitudes.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetBySolicitudesCategorias(DbTransaction transaction, System.Int32 IdSolicitudCategoria)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudesCategorias", IdSolicitudCategoria);
        }

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetBySolicitudesCategorias(DbTransaction transaction, IUniqueIdentifiable SolicitudesCategorias)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudesCategorias", SolicitudesCategorias.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByItinerario(System.Int32 IdItinerario)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByItinerario", IdItinerario);
        }

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByItinerario(IUniqueIdentifiable Itinerario)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByItinerario", Itinerario.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByReservasAereos(System.Int32 IdReservaAereo)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAereos", IdReservaAereo);
        }

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByReservasAereos(IUniqueIdentifiable ReservasAereos)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAereos", ReservasAereos.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByReservasAlquilerAuto(System.Int32 IdReservaAlquilerAuto)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAlquilerAuto", IdReservaAlquilerAuto);
        }

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByReservasAlquilerAuto(IUniqueIdentifiable ReservasAlquilerAuto)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAlquilerAuto", ReservasAlquilerAuto.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByReservasHotel(System.Int32 IdReservaHotel)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasHotel", IdReservaHotel);
        }

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetByReservasHotel(IUniqueIdentifiable ReservasHotel)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasHotel", ReservasHotel.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetBySolicitudes(System.Int32 IdSolicitud)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudes", IdSolicitud);
        }

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetBySolicitudes(IUniqueIdentifiable Solicitudes)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudes", Solicitudes.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetBySolicitudesCategorias(System.Int32 IdSolicitudCategoria)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudesCategorias", IdSolicitudCategoria);
        }

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesDetalleList GetBySolicitudesCategorias(IUniqueIdentifiable SolicitudesCategorias)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudesCategorias", SolicitudesCategorias.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public void Delete(System.Int32 IdSolicitudDetalle)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_Delete", IdSolicitudDetalle);
        }

        /// <summary>
        /// 
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 IdSolicitudDetalle)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_Delete", IdSolicitudDetalle);
        }


        // Delete By Objects and Params
            



        

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByItinerario(System.Int32 IdItinerario)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByItinerario", IdItinerario);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByItinerario(DbTransaction transaction, System.Int32 IdItinerario)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByItinerario", IdItinerario);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByItinerario(IUniqueIdentifiable Itinerario)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByItinerario", Itinerario.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByItinerario(DbTransaction transaction, IUniqueIdentifiable Itinerario)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByItinerario", Itinerario.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByReservasAereos(System.Int32 IdReservaAereo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByReservasAereos", IdReservaAereo);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByReservasAereos(DbTransaction transaction, System.Int32 IdReservaAereo)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByReservasAereos", IdReservaAereo);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByReservasAereos(IUniqueIdentifiable ReservasAereos)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByReservasAereos", ReservasAereos.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByReservasAereos(DbTransaction transaction, IUniqueIdentifiable ReservasAereos)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByReservasAereos", ReservasAereos.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByReservasAlquilerAuto(System.Int32 IdReservaAlquilerAuto)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByReservasAlquilerAuto", IdReservaAlquilerAuto);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByReservasAlquilerAuto(DbTransaction transaction, System.Int32 IdReservaAlquilerAuto)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByReservasAlquilerAuto", IdReservaAlquilerAuto);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByReservasAlquilerAuto(IUniqueIdentifiable ReservasAlquilerAuto)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByReservasAlquilerAuto", ReservasAlquilerAuto.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByReservasAlquilerAuto(DbTransaction transaction, IUniqueIdentifiable ReservasAlquilerAuto)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByReservasAlquilerAuto", ReservasAlquilerAuto.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByReservasHotel(System.Int32 IdReservaHotel)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByReservasHotel", IdReservaHotel);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByReservasHotel(DbTransaction transaction, System.Int32 IdReservaHotel)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByReservasHotel", IdReservaHotel);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteByReservasHotel(IUniqueIdentifiable ReservasHotel)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByReservasHotel", ReservasHotel.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteByReservasHotel(DbTransaction transaction, IUniqueIdentifiable ReservasHotel)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_DeleteByReservasHotel", ReservasHotel.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySolicitudes(System.Int32 IdSolicitud)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_DeleteBySolicitudes", IdSolicitud);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySolicitudes(DbTransaction transaction, System.Int32 IdSolicitud)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_DeleteBySolicitudes", IdSolicitud);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySolicitudes(IUniqueIdentifiable Solicitudes)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_DeleteBySolicitudes", Solicitudes.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySolicitudes(DbTransaction transaction, IUniqueIdentifiable Solicitudes)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_DeleteBySolicitudes", Solicitudes.Identifier());
        }


    

        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySolicitudesCategorias(System.Int32 IdSolicitudCategoria)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_DeleteBySolicitudesCategorias", IdSolicitudCategoria);
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySolicitudesCategorias(DbTransaction transaction, System.Int32 IdSolicitudCategoria)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_DeleteBySolicitudesCategorias", IdSolicitudCategoria);
        }


        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySolicitudesCategorias(IUniqueIdentifiable SolicitudesCategorias)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_DeleteBySolicitudesCategorias", SolicitudesCategorias.Identifier());
        }

        /// <summary>
        /// 
        /// </summary>
        public void DeleteBySolicitudesCategorias(DbTransaction transaction, IUniqueIdentifiable SolicitudesCategorias)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_DeleteBySolicitudesCategorias", SolicitudesCategorias.Identifier());
        }


    


        //Database Queries 
        


        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }


}

namespace serin_viaticosRules.Wrappers
{
    /// <summary>
    /// 
    /// </summary>
    public class SolicitudesDetalleMapperWrapper
    {

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            return Instance().GetPKPropertiesNames();
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return Instance().GetMappingType();
        }



        /// <summary>
        /// 
        /// </summary>
        public serin_viaticosRules.Mappers.SolicitudesDetalleMapper Instance()
        {
            return serin_viaticosRules.Mappers.SolicitudesDetalleMapper.Instance(); 
        }
        
        /// <summary>
        /// Get a SolicitudesDetalleEntity by calling a Stored Procedure
        /// </summary>
        public Entities.SolicitudesDetalle GetOne(System.Int32 IdSolicitudDetalle) {
            return Instance().GetOne( IdSolicitudDetalle);
        }

        // GetBy Objects and Params
            

        

        /// <summary>
        /// Get a SolicitudesDetalleList by calling a Stored Procedure
        /// </summary>
        public Entities.SolicitudesDetalleList GetByItinerario(System.Int32 IdItinerario)
        {
            return Instance().GetByItinerario(IdItinerario);
        }

        /// <summary>
        /// Get a SolicitudesDetalleList by calling a Stored Procedure
        /// </summary>
        public Entities.SolicitudesDetalleList GetByItinerario(IUniqueIdentifiable Itinerario)
        {
            return Instance().GetByItinerario(Itinerario);
        }

    

        /// <summary>
        /// Get a SolicitudesDetalleList by calling a Stored Procedure
        /// </summary>
        public Entities.SolicitudesDetalleList GetByReservasAereos(System.Int32 IdReservaAereo)
        {
            return Instance().GetByReservasAereos(IdReservaAereo);
        }

        /// <summary>
        /// Get a SolicitudesDetalleList by calling a Stored Procedure
        /// </summary>
        public Entities.SolicitudesDetalleList GetByReservasAereos(IUniqueIdentifiable ReservasAereos)
        {
            return Instance().GetByReservasAereos(ReservasAereos);
        }

    

        /// <summary>
        /// Get a SolicitudesDetalleList by calling a Stored Procedure
        /// </summary>
        public Entities.SolicitudesDetalleList GetByReservasAlquilerAuto(System.Int32 IdReservaAlquilerAuto)
        {
            return Instance().GetByReservasAlquilerAuto(IdReservaAlquilerAuto);
        }

        /// <summary>
        /// Get a SolicitudesDetalleList by calling a Stored Procedure
        /// </summary>
        public Entities.SolicitudesDetalleList GetByReservasAlquilerAuto(IUniqueIdentifiable ReservasAlquilerAuto)
        {
            return Instance().GetByReservasAlquilerAuto(ReservasAlquilerAuto);
        }

    

        /// <summary>
        /// Get a SolicitudesDetalleList by calling a Stored Procedure
        /// </summary>
        public Entities.SolicitudesDetalleList GetByReservasHotel(System.Int32 IdReservaHotel)
        {
            return Instance().GetByReservasHotel(IdReservaHotel);
        }

        /// <summary>
        /// Get a SolicitudesDetalleList by calling a Stored Procedure
        /// </summary>
        public Entities.SolicitudesDetalleList GetByReservasHotel(IUniqueIdentifiable ReservasHotel)
        {
            return Instance().GetByReservasHotel(ReservasHotel);
        }

    

        /// <summary>
        /// Get a SolicitudesDetalleList by calling a Stored Procedure
        /// </summary>
        public Entities.SolicitudesDetalleList GetBySolicitudes(System.Int32 IdSolicitud)
        {
            return Instance().GetBySolicitudes(IdSolicitud);
        }

        /// <summary>
        /// Get a SolicitudesDetalleList by calling a Stored Procedure
        /// </summary>
        public Entities.SolicitudesDetalleList GetBySolicitudes(IUniqueIdentifiable Solicitudes)
        {
            return Instance().GetBySolicitudes(Solicitudes);
        }

    

        /// <summary>
        /// Get a SolicitudesDetalleList by calling a Stored Procedure
        /// </summary>
        public Entities.SolicitudesDetalleList GetBySolicitudesCategorias(System.Int32 IdSolicitudCategoria)
        {
            return Instance().GetBySolicitudesCategorias(IdSolicitudCategoria);
        }

        /// <summary>
        /// Get a SolicitudesDetalleList by calling a Stored Procedure
        /// </summary>
        public Entities.SolicitudesDetalleList GetBySolicitudesCategorias(IUniqueIdentifiable SolicitudesCategorias)
        {
            return Instance().GetBySolicitudesCategorias(SolicitudesCategorias);
        }

    

       

        /// <summary>
        /// Delete children for SolicitudesDetalle
        /// </summary>
        public void DeleteChildren(DbTransaction transaction, SolicitudesDetalle entity)
        {
            Instance().DeleteChildren(transaction, entity);
        }

        

            

        

        /// <summary>
        /// Delete SolicitudesDetalle by Itinerario
        /// </summary>
        public void DeleteByItinerario(System.Int32 IdItinerario)
        {
            Instance().DeleteByItinerario(IdItinerario);
        }

        /// <summary>
        /// Delete SolicitudesDetalle by Itinerario
        /// </summary>
        public void DeleteByItinerario(IUniqueIdentifiable Itinerario)
        {
            Instance().DeleteByItinerario(Itinerario);
        }

    

        /// <summary>
        /// Delete SolicitudesDetalle by ReservasAereos
        /// </summary>
        public void DeleteByReservasAereos(System.Int32 IdReservaAereo)
        {
            Instance().DeleteByReservasAereos(IdReservaAereo);
        }

        /// <summary>
        /// Delete SolicitudesDetalle by ReservasAereos
        /// </summary>
        public void DeleteByReservasAereos(IUniqueIdentifiable ReservasAereos)
        {
            Instance().DeleteByReservasAereos(ReservasAereos);
        }

    

        /// <summary>
        /// Delete SolicitudesDetalle by ReservasAlquilerAuto
        /// </summary>
        public void DeleteByReservasAlquilerAuto(System.Int32 IdReservaAlquilerAuto)
        {
            Instance().DeleteByReservasAlquilerAuto(IdReservaAlquilerAuto);
        }

        /// <summary>
        /// Delete SolicitudesDetalle by ReservasAlquilerAuto
        /// </summary>
        public void DeleteByReservasAlquilerAuto(IUniqueIdentifiable ReservasAlquilerAuto)
        {
            Instance().DeleteByReservasAlquilerAuto(ReservasAlquilerAuto);
        }

    

        /// <summary>
        /// Delete SolicitudesDetalle by ReservasHotel
        /// </summary>
        public void DeleteByReservasHotel(System.Int32 IdReservaHotel)
        {
            Instance().DeleteByReservasHotel(IdReservaHotel);
        }

        /// <summary>
        /// Delete SolicitudesDetalle by ReservasHotel
        /// </summary>
        public void DeleteByReservasHotel(IUniqueIdentifiable ReservasHotel)
        {
            Instance().DeleteByReservasHotel(ReservasHotel);
        }

    

        /// <summary>
        /// Delete SolicitudesDetalle by Solicitudes
        /// </summary>
        public void DeleteBySolicitudes(System.Int32 IdSolicitud)
        {
            Instance().DeleteBySolicitudes(IdSolicitud);
        }

        /// <summary>
        /// Delete SolicitudesDetalle by Solicitudes
        /// </summary>
        public void DeleteBySolicitudes(IUniqueIdentifiable Solicitudes)
        {
            Instance().DeleteBySolicitudes(Solicitudes);
        }

    

        /// <summary>
        /// Delete SolicitudesDetalle by SolicitudesCategorias
        /// </summary>
        public void DeleteBySolicitudesCategorias(System.Int32 IdSolicitudCategoria)
        {
            Instance().DeleteBySolicitudesCategorias(IdSolicitudCategoria);
        }

        /// <summary>
        /// Delete SolicitudesDetalle by SolicitudesCategorias
        /// </summary>
        public void DeleteBySolicitudesCategorias(IUniqueIdentifiable SolicitudesCategorias)
        {
            Instance().DeleteBySolicitudesCategorias(SolicitudesCategorias);
        }

    
        /// <summary>
        /// Delete SolicitudesDetalle 
        /// </summary>
        public void Delete(System.Int32 IdSolicitudDetalle){
            Instance().Delete(IdSolicitudDetalle);
        }

        /// <summary>
        /// Delete SolicitudesDetalle 
        /// </summary>
        public void Delete(Entities.SolicitudesDetalle entity ){
            Instance().Delete(entity);
        }

        /// <summary>
        /// Save SolicitudesDetalle  
        /// </summary>
        public void Save(Entities.SolicitudesDetalle entity){
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert SolicitudesDetalle 
        /// </summary>
        public void Insert(Entities.SolicitudesDetalle entity){
            Instance().Insert(entity);
        }

        /// <summary>
        /// GetAll SolicitudesDetalle 
        /// </summary>
        public Entities.SolicitudesDetalleList GetAll(){  
            return Instance().GetAll();
        }

        /// <summary>
        /// Save SolicitudesDetalle 
        /// </summary>
        public void Save(System.Int32 IdSolicitudDetalle, System.Int32 IdSolicitud, System.Int32 IdSolicitudCategoria, System.Int32 IdReservaAereo, System.Int32 IdReservaHotel, System.Int32 IdItinerario, System.Int32 IdReservaAlquilerAuto, System.String Observaciones){
            Entities.SolicitudesDetalle entity = Instance().GetOne(IdSolicitudDetalle);
            if (entity == null)
                throw new ApplicationException(String.Format("Entity not found. IUniqueIdentifiable Values: {0} = {1}", "IdSolicitudDetalle", IdSolicitudDetalle));

            entity.IdSolicitud = IdSolicitud;
            entity.IdSolicitudCategoria = IdSolicitudCategoria;
            entity.IdReservaAereo = IdReservaAereo;
            entity.IdReservaHotel = IdReservaHotel;
            entity.IdItinerario = IdItinerario;
            entity.IdReservaAlquilerAuto = IdReservaAlquilerAuto;
            entity.Observaciones = Observaciones;
            Instance().Save(entity);
        }

        /// <summary>
        /// Insert SolicitudesDetalle
        /// </summary>
        public void Insert(System.Int32 IdSolicitud, System.Int32 IdSolicitudCategoria, System.Int32 IdReservaAereo, System.Int32 IdReservaHotel, System.Int32 IdItinerario, System.Int32 IdReservaAlquilerAuto, System.String Observaciones){
            Entities.SolicitudesDetalle entity = new Entities.SolicitudesDetalle();

            entity.IdSolicitud = IdSolicitud;
            entity.IdSolicitudCategoria = IdSolicitudCategoria;
            entity.IdReservaAereo = IdReservaAereo;
            entity.IdReservaHotel = IdReservaHotel;
            entity.IdItinerario = IdItinerario;
            entity.IdReservaAlquilerAuto = IdReservaAlquilerAuto;
            entity.Observaciones = Observaciones;
            Instance().Insert(entity);
        }


        //Database Queries 
        


    }
}





namespace serin_viaticosRules.Loaders
{

    /// <summary>
    /// 
    /// </summary>
    public partial class SolicitudesDetalleLoader<T> : BaseLoader< T, SolicitudesDetalle, ObjectList<T>>, IGenericGateway where T : SolicitudesDetalle, new()
    {

        #region "Singleton"

        static SolicitudesDetalleLoader<T> _instance;

        private SolicitudesDetalleLoader()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        public static SolicitudesDetalleLoader<T> Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new SolicitudesDetalleLoader<T>();
                else {
                    SolicitudesDetalleLoader<T> inst = HttpContext.Current.Items["serin_viaticosRules.SolicitudesDetalleLoaderSingleton"] as SolicitudesDetalleLoader<T>;
                    if (inst == null) {
                        inst = new SolicitudesDetalleLoader<T>();
                        HttpContext.Current.Items.Add("serin_viaticosRules.SolicitudesDetalleLoaderSingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }


        #endregion

        /// <summary>
        /// 
        /// </summary>
        public string[] GetPKPropertiesNames()
        {
            
            string[] s ={"IdSolicitudDetalle"};
            return s;
        }
        /// <summary>
        /// 
        /// </summary>
        public Type GetMappingType()
        {
            return typeof(SolicitudesDetalle);
        }


        /// <summary>
        /// 
        /// </summary>
        protected override string TableName
        {
            get { return "SolicitudesDetalle"; }
        }

        
        
        /// <summary>
        /// 
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, SolicitudesDetalle entity)
        {
            
            IMappeableSolicitudesDetalleObject SolicitudesDetalle = (IMappeableSolicitudesDetalleObject)entity;
            SolicitudesDetalle.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
reader.GetInt32(2),
(reader.IsDBNull(3)) ? new System.Nullable<System.Int32>() : reader.GetInt32(3),
(reader.IsDBNull(4)) ? new System.Nullable<System.Int32>() : reader.GetInt32(4),
(reader.IsDBNull(5)) ? new System.Nullable<System.Int32>() : reader.GetInt32(5),
(reader.IsDBNull(6)) ? new System.Nullable<System.Int32>() : reader.GetInt32(6),
(reader.IsDBNull(7)) ? "" : reader.GetString(7));
        }

        /// <summary>
        /// 
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "coop_";
        }


        
    

        

        /// <summary>
        /// Complete the aggregations for this entity. 
        /// </summary>
        protected override void CompleteEntity(T entity)
        {
            Entities.Itinerario ItinerarioEntity = null; // Lazy load
Entities.ReservasAereos ReservasAereosEntity = null; // Lazy load
Entities.ReservasAlquilerAuto ReservasAlquilerAutoEntity = null; // Lazy load
Entities.ReservasHotel ReservasHotelEntity = null; // Lazy load
Entities.Solicitudes SolicitudesEntity = null; // Lazy load
Entities.SolicitudesCategorias SolicitudesCategoriasEntity = null; // Lazy load
            ((IMappeableSolicitudesDetalle)entity).CompleteEntity(ItinerarioEntity, ReservasAereosEntity, ReservasAlquilerAutoEntity, ReservasHotelEntity, SolicitudesEntity, SolicitudesCategoriasEntity);
        }


        



        /// <summary>
        /// Get a SolicitudesDetalle by execute a SQL Query Text
        /// </summary>
        public T GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a SolicitudesDetalleList by execute a SQL Query Text
        /// </summary>
        public ObjectList<T> GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }

        /// <summary>
        /// GetOne By Params
        /// </summary>
        public T GetOne(System.Int32 IdSolicitudDetalle)
        {
            return base.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetOne", IdSolicitudDetalle);
        }


        // GetOne By Objects and Params
            


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByItinerario(DbTransaction transaction, System.Int32 IdItinerario)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByItinerario", IdItinerario);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByItinerario(DbTransaction transaction, IUniqueIdentifiable Itinerario)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByItinerario", Itinerario.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByReservasAereos(DbTransaction transaction, System.Int32 IdReservaAereo)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAereos", IdReservaAereo);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByReservasAereos(DbTransaction transaction, IUniqueIdentifiable ReservasAereos)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAereos", ReservasAereos.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByReservasAlquilerAuto(DbTransaction transaction, System.Int32 IdReservaAlquilerAuto)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAlquilerAuto", IdReservaAlquilerAuto);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByReservasAlquilerAuto(DbTransaction transaction, IUniqueIdentifiable ReservasAlquilerAuto)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAlquilerAuto", ReservasAlquilerAuto.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByReservasHotel(DbTransaction transaction, System.Int32 IdReservaHotel)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasHotel", IdReservaHotel);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByReservasHotel(DbTransaction transaction, IUniqueIdentifiable ReservasHotel)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasHotel", ReservasHotel.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySolicitudes(DbTransaction transaction, System.Int32 IdSolicitud)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudes", IdSolicitud);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySolicitudes(DbTransaction transaction, IUniqueIdentifiable Solicitudes)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudes", Solicitudes.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySolicitudesCategorias(DbTransaction transaction, System.Int32 IdSolicitudCategoria)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudesCategorias", IdSolicitudCategoria);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySolicitudesCategorias(DbTransaction transaction, IUniqueIdentifiable SolicitudesCategorias)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudesCategorias", SolicitudesCategorias.Identifier());
        }

    


        

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByItinerario(System.Int32 IdItinerario)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByItinerario", IdItinerario);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByItinerario(IUniqueIdentifiable Itinerario)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByItinerario", Itinerario.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByReservasAereos(System.Int32 IdReservaAereo)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAereos", IdReservaAereo);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByReservasAereos(IUniqueIdentifiable ReservasAereos)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAereos", ReservasAereos.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByReservasAlquilerAuto(System.Int32 IdReservaAlquilerAuto)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAlquilerAuto", IdReservaAlquilerAuto);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByReservasAlquilerAuto(IUniqueIdentifiable ReservasAlquilerAuto)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasAlquilerAuto", ReservasAlquilerAuto.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByReservasHotel(System.Int32 IdReservaHotel)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasHotel", IdReservaHotel);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetByReservasHotel(IUniqueIdentifiable ReservasHotel)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetByReservasHotel", ReservasHotel.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySolicitudes(System.Int32 IdSolicitud)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudes", IdSolicitud);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySolicitudes(IUniqueIdentifiable Solicitudes)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudes", Solicitudes.Identifier());
        }

    

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySolicitudesCategorias(System.Int32 IdSolicitudCategoria)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudesCategorias", IdSolicitudCategoria);
        }

        /// <summary>
        /// 
        /// </summary>
        public ObjectList<T> GetBySolicitudesCategorias(IUniqueIdentifiable SolicitudesCategorias)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SolicitudesDetalle_GetBySolicitudesCategorias", SolicitudesCategorias.Identifier());
        }

    

        //Database Queries 
        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion

    }
}





