
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is HotelesEntity.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using serin_viaticosRules.Objects;



using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using System;

namespace serin_viaticosRules.Entities
{

    /// <summary>
    /// 
    /// </summary>
    public partial class Hoteles : Objects.HotelesObject, IMappeableHoteles, IEquatable<Hoteles>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public Hoteles()
            :base()
        {
            
        }

        /// <summary>
        /// 
        /// </summary>
        public Hoteles(
			System.Int32 IdHotel)
            : base()
        {

			_IdHotel = IdHotel;

            
            Initialized();
        }

        

        /// <summary>
        /// 
        /// </summary>
        public Hoteles(
			System.Int32 IdHotel,
			System.String Nombre,
			System.Int32 IdUbicacion,
			System.String Telefono,
			System.String Email,
			System.String Direccion)
            : base()
        {

			_IdHotel = IdHotel;
			_Nombre = Nombre;
			_IdUbicacion = IdUbicacion;
			_Telefono = Telefono;
			_Email = Email;
			_Direccion = Direccion;

            
            Initialized();
        }
        
        #endregion

        #region "Fields"

        
        #endregion

        #region "Properties"
        
        #endregion

        /// <summary>
        /// Returns de original value of entity since was created or restored.
        /// </summary>
        public new Hoteles OriginalValue()
        {
            return (Hoteles)base.OriginalValue();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            Hoteles newObject;            
            

            newObject = (Hoteles)this.MemberwiseClone();
            // Entities
            
            // Colections
            
            // OriginalValue
            Hoteles newOriginalValue;
            if (base._OriginalValue != null)
            {
                newOriginalValue = (Hoteles)this.OriginalValue().MemberwiseClone();
                // Entities
                
                // Colections
                            
                newObject._OriginalValue = newOriginalValue;

            }
            return newObject;            
        }



        /// <summary>
        /// 
        /// </summary>
        void IMappeableHoteles.CompleteEntity()
        {
        
        }
        

        /// <summary>
        /// 
        /// </summary>
        void IMappeableHoteles.SetFKValuesForChilds(Hoteles entity)
        {
                
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(Hoteles other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        } 

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableHoteles
    {
        /// <summary>
        /// 
        /// </summary>
        void CompleteEntity();
        
        /// <summary>
        /// 
        /// </summary>
        void SetFKValuesForChilds(Hoteles entity);
    }

        /// <summary>
        /// 
        /// </summary>
    public partial class HotelesList : ObjectList<Hoteles>
    {
    }
}
namespace serin_viaticosRules.Views
{
        /// <summary>
        /// 
        /// </summary>
    public partial class HotelesListView
        : ObjectListView<Entities.Hoteles>
    {
        /// <summary>
        /// 
        /// </summary>
        public HotelesListView(Entities.HotelesList list): base(list)
        {
        }
    }
}


