
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is ReservasAereosEntity.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using serin_viaticosRules.Objects;



using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using System;

namespace serin_viaticosRules.Entities
{

    /// <summary>
    /// 
    /// </summary>
    public partial class ReservasAereos : Objects.ReservasAereosObject, IMappeableReservasAereos, IEquatable<ReservasAereos>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public ReservasAereos()
            :base()
        {
            if (_UbicacionesDestinoEntity == null) _UbicacionesDestinoEntity = new Entities.Ubicaciones();
if (_UbicacionesOrigenEntity == null) _UbicacionesOrigenEntity = new Entities.Ubicaciones();

        }

        /// <summary>
        /// 
        /// </summary>
        public ReservasAereos(
			System.Int32 IdReservaAereo)
            : base()
        {

			_IdReservaAereo = IdReservaAereo;

            if (_UbicacionesDestinoEntity == null) _UbicacionesDestinoEntity = new Entities.Ubicaciones();
if (_UbicacionesOrigenEntity == null) _UbicacionesOrigenEntity = new Entities.Ubicaciones();

            Initialized();
        }

        

        /// <summary>
        /// 
        /// </summary>
        public ReservasAereos(
			System.Int32 IdReservaAereo,
			System.Int32 IdOrigen,
			System.Int32 IdDestino,
			System.Int32 CantPasajeros,
			System.DateTime FechaViaje,
			System.Boolean IdaVuelta,
			System.Nullable<System.Decimal> Precio)
            : base()
        {

			_IdReservaAereo = IdReservaAereo;
			_IdOrigen = IdOrigen;
			_IdDestino = IdDestino;
			_CantPasajeros = CantPasajeros;
			_FechaViaje = FechaViaje;
			_IdaVuelta = IdaVuelta;
			_Precio = Precio;

            if (_UbicacionesDestinoEntity == null) _UbicacionesDestinoEntity = new Entities.Ubicaciones();
if (_UbicacionesOrigenEntity == null) _UbicacionesOrigenEntity = new Entities.Ubicaciones();

            Initialized();
        }
        
        #endregion

        #region "Fields"

        /// <summary>
/// 
/// </summary>
protected Entities.Ubicaciones _UbicacionesDestinoEntity;
/// <summary>
/// 
/// </summary>
protected Entities.Ubicaciones _UbicacionesOrigenEntity;

        #endregion

        #region "Properties"
        
bool _UbicacionesDestinoEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Entities.Ubicaciones UbicacionesDestinoEntity
        {
            get
            {
                if (_UbicacionesDestinoEntity== null  && ! _UbicacionesDestinoEntityFetched ) {
_UbicacionesDestinoEntityFetched = true;
Entities.Ubicaciones _UbicacionesDestinoEntityTemp = new Entities.Ubicaciones(this.IdDestino); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Entities.Ubicaciones));
 _UbicacionesDestinoEntity = lazyProvider.GetEntity(typeof(Entities.Ubicaciones), _UbicacionesDestinoEntityTemp) as Entities.Ubicaciones;
}

                return _UbicacionesDestinoEntity;
            }
            set
            {
                base.PropertyModified();
                _UbicacionesDestinoEntity = value;
                if (value != null) {
   _IdDestino = value.IdUbicacion;

} else {
   _IdDestino = System.Int32.MinValue;

}

            }
        }
        

        /// <summary>
        /// 
        /// </summary>
        public virtual Entities.Ubicaciones UbicacionesOrigenEntity
        {
            get
            {
                
                return _UbicacionesOrigenEntity;
            }
            set
            {
                base.PropertyModified();
                _UbicacionesOrigenEntity = value;
                if (value != null) {
   _IdOrigen = value.IdUbicacion;

} else {
   _IdOrigen = System.Int32.MinValue;

}

            }
        }
        
        #endregion

        /// <summary>
        /// Returns de original value of entity since was created or restored.
        /// </summary>
        public new ReservasAereos OriginalValue()
        {
            return (ReservasAereos)base.OriginalValue();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            ReservasAereos newObject;            
            

            newObject = (ReservasAereos)this.MemberwiseClone();
            // Entities
                         
            if (this._UbicacionesDestinoEntity != null)
            {
                newObject._UbicacionesDestinoEntity = (Entities.Ubicaciones)((ICloneable)this._UbicacionesDestinoEntity).Clone();
            }
                         
            if (this._UbicacionesOrigenEntity != null)
            {
                newObject._UbicacionesOrigenEntity = (Entities.Ubicaciones)((ICloneable)this._UbicacionesOrigenEntity).Clone();
            }
            
            // Colections
            
            // OriginalValue
            ReservasAereos newOriginalValue;
            if (base._OriginalValue != null)
            {
                newOriginalValue = (ReservasAereos)this.OriginalValue().MemberwiseClone();
                // Entities
                             
                if (this.OriginalValue()._UbicacionesDestinoEntity != null)
                {
                    newOriginalValue._UbicacionesDestinoEntity = (Entities.Ubicaciones)((ICloneable)this.OriginalValue()._UbicacionesDestinoEntity).Clone();
                }
                             
                if (this.OriginalValue()._UbicacionesOrigenEntity != null)
                {
                    newOriginalValue._UbicacionesOrigenEntity = (Entities.Ubicaciones)((ICloneable)this.OriginalValue()._UbicacionesOrigenEntity).Clone();
                }
                
                // Colections
                            
                newObject._OriginalValue = newOriginalValue;

            }
            return newObject;            
        }



        /// <summary>
        /// 
        /// </summary>
        void IMappeableReservasAereos.CompleteEntity(Entities.Ubicaciones UbicacionesDestinoEntity, Entities.Ubicaciones UbicacionesOrigenEntity)
        {
        _UbicacionesDestinoEntity = UbicacionesDestinoEntity;
_UbicacionesOrigenEntity = UbicacionesOrigenEntity;
        }
        
        bool IMappeableReservasAereos.IsUbicacionesDestinoEntityNull()
        {
            return (_UbicacionesDestinoEntity == null);
        }
        

        /// <summary>
        /// 
        /// </summary>
        void IMappeableReservasAereos.SetFKValuesForChilds(ReservasAereos entity)
        {
                
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(ReservasAereos other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        } 

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableReservasAereos
    {
        /// <summary>
        /// 
        /// </summary>
        void CompleteEntity(Entities.Ubicaciones UbicacionesDestinoEntity, Entities.Ubicaciones UbicacionesOrigenEntity);
        
        /// <summary>
        /// 
        /// </summary>
        bool IsUbicacionesDestinoEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        void SetFKValuesForChilds(ReservasAereos entity);
    }

        /// <summary>
        /// 
        /// </summary>
    public partial class ReservasAereosList : ObjectList<ReservasAereos>
    {
    }
}
namespace serin_viaticosRules.Views
{
        /// <summary>
        /// 
        /// </summary>
    public partial class ReservasAereosListView
        : ObjectListView<Entities.ReservasAereos>
    {
        /// <summary>
        /// 
        /// </summary>
        public ReservasAereosListView(Entities.ReservasAereosList list): base(list)
        {
        }
    }
}


