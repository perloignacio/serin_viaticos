
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 
// This is a partial class file. The other one is SolicitudesEstadosObject.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using Cooperator.Framework.Core;
using System;

namespace serin_viaticosRules.Objects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class SolicitudesEstadosObject : BaseObject, IMappeableSolicitudesEstadosObject, IUniqueIdentifiable, IEquatable<SolicitudesEstadosObject>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesEstadosObject(): base()
        {


        }

        /// <summary>
        /// 
        /// </summary>
        public SolicitudesEstadosObject(
			System.Int32 IdSolicitudEstado): base()
        {

			_IdSolicitudEstado = IdSolicitudEstado;

            Initialized();
        }

        
        /// <summary>
        /// 
        /// </summary>
        public SolicitudesEstadosObject(
			System.Int32 IdSolicitudEstado,
			System.String Nombre,
			System.Boolean Activo): base()
        {

			_IdSolicitudEstado = IdSolicitudEstado;
			_Nombre = Nombre;
			_Activo = Activo;

            Initialized();
        }
        

        #endregion

        #region "Events"
        
        
        #endregion

        #region "Fields"

            /// <summary>
/// 
/// </summary>
protected System.Int32 _IdSolicitudEstado;
/// <summary>
/// 
/// </summary>
protected System.String _Nombre;
/// <summary>
/// 
/// </summary>
protected System.Boolean _Activo;

        #endregion

        #region "Properties"
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 IdSolicitudEstado
        {
            get
            {
                return _IdSolicitudEstado;
            }
            
            set
            {
                base.PropertyModified();
                _IdSolicitudEstado = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            
            set
            {
                base.PropertyModified();
                _Nombre = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Boolean Activo
        {
            get
            {
                return _Activo;
            }
            
            set
            {
                base.PropertyModified();
                _Activo = value;
                
            }
            
        }
        
        #endregion

        
            
                
        /// <summary>
        /// 
        /// </summary>
        protected override void SetOriginalValue()
        {
            base._OriginalValue = (IObject) this.MemberwiseClone();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            SolicitudesEstadosObject newObject;
            SolicitudesEstadosObject newOriginalValue;

            newObject = (SolicitudesEstadosObject) this.MemberwiseClone();
            if (base._OriginalValue != null)
            {
                newOriginalValue = (SolicitudesEstadosObject)this.OriginalValue().MemberwiseClone();
                newObject._OriginalValue = newOriginalValue;
            }
            return newObject;
        }


        /// <summary>
        /// Returns de original value of object since was created or restored.
        /// </summary>
        public new SolicitudesEstadosObject OriginalValue()
        {
            return (SolicitudesEstadosObject)base.OriginalValue();
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableSolicitudesEstadosObject.HydrateFields(
			System.Int32 IdSolicitudEstado,
			System.String Nombre,
			System.Boolean Activo)
        {
        _IdSolicitudEstado = IdSolicitudEstado;
_Nombre = Nombre;
_Activo = Activo;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableSolicitudesEstadosObject.GetFieldsForInsert()
        {
            object[] _myArray = new object[3];
            _myArray[0] = _IdSolicitudEstado;
_myArray[1] = _Nombre;
_myArray[2] = _Activo;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableSolicitudesEstadosObject.GetFieldsForUpdate()
        {
            
            object[] _myArray = new object[4];
            _myArray[0] = _IdSolicitudEstado;
_myArray[1] = _Nombre;
_myArray[2] = _Activo;
_myArray[3] = this.OriginalValue()._IdSolicitudEstado;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableSolicitudesEstadosObject.GetFieldsForDelete()
        {
            
            object[] _myArray = new object[1];
            _myArray[0] = _IdSolicitudEstado;

            return _myArray;
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableSolicitudesEstadosObject.UpdateObjectFromOutputParams(object[] parameters){
            // Update properties from Output parameters
            
        }


        /// <summary>
        /// 
        /// </summary>
        object[] IUniqueIdentifiable.Identifier()
        {
            SolicitudesEstadosObject o = null;
            if (ObjectStateHelper.IsModified(this))
                o = this.OriginalValue();
            else
                o = this;

            return new object[]
            {o.IdSolicitudEstado};
        }


        /// <summary>
        /// 
        /// </summary>
        public bool Equals(SolicitudesEstadosObject other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        }

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableSolicitudesEstadosObject
    {
        /// <summary>
        /// 
        /// </summary>
        void HydrateFields(System.Int32 IdSolicitudEstado, 
			System.String Nombre, 
			System.Boolean Activo);

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForInsert();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForUpdate();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForDelete();

        /// <summary>
        /// 
        /// </summary>
        void UpdateObjectFromOutputParams(object[] parameters);
    }

    /// <summary>
    /// 
    /// </summary>
    public partial class SolicitudesEstadosObjectList : ObjectList<SolicitudesEstadosObject>
    {
    }
}

namespace serin_viaticosRules.Views
{
    /// <summary>
    /// 
    /// </summary>
    public partial class SolicitudesEstadosObjectListView
        : ObjectListView<Objects.SolicitudesEstadosObject>
    {
        /// <summary>
        /// 
        /// </summary>
        public SolicitudesEstadosObjectListView(Objects.SolicitudesEstadosObjectList list): base(list)
        {
        }
    }
}


